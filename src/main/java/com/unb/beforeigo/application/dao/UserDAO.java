package com.unb.beforeigo.application.dao;

import com.unb.beforeigo.core.model.User;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.List;
import java.util.Optional;

/**
 * JPA Repository interface for defining specific DAO methods not already generated by JPA.
 *
 * @author Brandon Richardson
 * */
public interface UserDAO extends JpaRepository<User, Long> {
    /**
     * Find a user using their email address. If multiple users exist with the same email address, the first record
     * found is returned.
     *
     * @param emailAddress the email address to be used in the query.
     * @return an optional user with the given email address. If a user cannot be found with the given email address,
     * an empty optional is returned.
     * */
    Optional<User> findByEmail(final String emailAddress);

    /**
     * Find a user using their username.
     *
     * @param username the username to be used in the query.
     * @return an optional user with the given username. If a user cannot be found with the given username, an empty
     * optional is returned.
     * */
    Optional<User> findByUsername(final String username);


    /**
     * Find all users with a given {@link User.Role}.
     *
     * @param role a role
     * @return users with a given role
     * */
    List<User> findAllByRole(final User.Role role);
}
