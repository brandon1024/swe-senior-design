buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.unb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
    compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile("org.springframework.boot:spring-boot-starter-security")
	compile('org.springframework.security:spring-security-oauth2-jose')
	compile('javax.xml.bind:jaxb-api')
	compile('io.springfox:springfox-swagger2:2.9.2')
	compile('io.springfox:springfox-swagger-ui:2.9.2')
	compileOnly('org.projectlombok:lombok')
	runtime('org.postgresql:postgresql:42.2.5')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
    testCompile("org.junit.jupiter:junit-jupiter-api:5.2.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.2.0")
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

task delombok(type: Exec) {
	def lombokJarPath = configurations.compileOnly.find { it.name.startsWith("lombok") }
	delete 'src/src-delomboked'
	commandLine 'java', '-jar', lombokJarPath, 'delombok', 'src/main/java', '-d', 'build/src-delomboked', '--classpath', configurations.compile.asPath
}

task docs(type: Javadoc, dependsOn: delombok) {
	source = 'build/src-delomboked'
	classpath = configurations.compile
    exclude '**/placeholder'
	options.addBooleanOption('html5', true)
}